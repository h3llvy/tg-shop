import { HandlerBot } from '../../../../../types/bot'
import { LoggerService } from '../../../../core/services/loggerService'
import type { InlineQueryResultArticle } from 'grammy/types'
import axios from 'axios'

const DEFAULT_THUMBNAIL = 'https://example.com/gift-thumbnail.png'

export const setupInlineGiftHandlers = (bot: HandlerBot): void => {
  const logger = new LoggerService()

  bot.on('inline_query', async (ctx) => {
    try {
      const giftId = ctx.inlineQuery.query.trim()
      
      // –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É ID –ø–æ–¥–∞—Ä–∫–∞,
      // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      if (!giftId || !giftId.match(/^[0-9a-fA-F]{24}$/)) {
        await ctx.answerInlineQuery([])
        return
      }

      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∞—Ä–∫–µ —Å —Å–µ—Ä–≤–µ—Ä–∞
      const response = await axios.get(`${process.env.API_URL}/api/gifts/${giftId}`)
      const gift = response.data

      if (!gift) {
        await ctx.answerInlineQuery([])
        return
      }

      const results: InlineQueryResultArticle[] = [{
        type: 'article',
        id: giftId,
        title: gift.name,
        description: `–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫: ${gift.name}`,
        thumbnail_url: gift.image || DEFAULT_THUMBNAIL,
        input_message_content: {
          message_text: `üéÅ –í–∞–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–¥–∞—Ä–æ–∫: ${gift.name}`
        }
      }]

      await ctx.answerInlineQuery(results, { 
        cache_time: 300,
        is_personal: true
      })
    } catch (error) {
      logger.logError('Error in inline query handler:', error)
      await ctx.answerInlineQuery([])
    }
  })
}